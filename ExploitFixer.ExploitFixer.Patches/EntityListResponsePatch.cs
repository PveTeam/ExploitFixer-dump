using System;
using System.Reflection;
using NLog;
using Sandbox.Game.Entities;
using Sandbox.Game.Gui;
using Sandbox.Game.Multiplayer;
using Sandbox.Game.World;
using Torch.Managers.PatchManager;
using VRage.Game.ModAPI;
using VRage.Network;

namespace ExploitFixer.ExploitFixer.Patches;

[PatchShim]
public static class EntityListResponsePatch
{
	public static Logger _log = smethod_9(global::_003CModule_003E.smethod_3<string>(-371257350));

	public static void Patch(PatchContext ctx)
	{
		MethodInfo methodBase_ = default(MethodInfo);
		while (true)
		{
			int num = 926690789;
			while (true)
			{
				switch ((uint)(num ^ 0x69179682) % 4u)
				{
				case 3u:
					methodBase_ = ((EntityListResponsePatch)(object)smethod_0(typeof(MyGuiScreenSafeZoneFilter).TypeHandle)).method_0(global::_003CModule_003E.smethod_5<string>(1925737290), BindingFlags.Static | BindingFlags.NonPublic);
					num = 1207184632;
					continue;
				case 2u:
					smethod_3(smethod_2(smethod_1(ctx, (MethodBase)methodBase_)), ((EntityListResponsePatch)(object)smethod_0(typeof(EntityListResponsePatch).TypeHandle)).method_0(global::_003CModule_003E.smethod_6<string>(-1274856180), BindingFlags.Static | BindingFlags.Public));
					num = 631937947;
					continue;
				default:
					return;
				case 0u:
					break;
				case 1u:
					return;
				}
				break;
			}
		}
	}

	public static bool EntityListRequestPrefix(MyEntityTypeEnum selectedType)
	{
		//IL_00b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bf: Invalid comparison between Unknown and I4
		//IL_0006: Unknown result type (might be due to invalid IL or missing references)
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		ulong value = default(ulong);
		MyPlayer myPlayer_ = default(MyPlayer);
		bool result = default(bool);
		bool flag = default(bool);
		bool flag2 = default(bool);
		while (true)
		{
			int num = 2031961137;
			while (true)
			{
				uint num2;
				object obj;
				switch ((num2 = (uint)num ^ 0x64CCD49Cu) % 14)
				{
				case 13u:
					value = MyEventContext.Current.Sender.Value;
					if (!smethod_5(smethod_4().Players, value, ref myPlayer_))
					{
						num = ((int)num2 * -1160451202) ^ -1538840231;
						continue;
					}
					obj = myPlayer_;
					goto IL_003e;
				case 12u:
					result = false;
					num = (int)((num2 * 293997797) ^ 0x7576E55B);
					continue;
				case 11u:
				{
					int num5;
					int num6;
					if (flag)
					{
						num5 = 733712045;
						num6 = 733712045;
					}
					else
					{
						num5 = 2016810850;
						num6 = 2016810850;
					}
					num = num5 ^ ((int)num2 * -2057844760);
					continue;
				}
				case 9u:
					smethod_7(_log, smethod_6(global::_003CModule_003E.smethod_5<string>(-1982044977), (object)value));
					num = 1583324882;
					continue;
				case 8u:
				{
					MyPromoteLevel val = smethod_8(smethod_4(), value);
					flag2 = (int)val == 0;
					num = 2131775639;
					continue;
				}
				case 7u:
					obj = null;
					goto IL_003e;
				case 6u:
					smethod_7(_log, smethod_6(global::_003CModule_003E.smethod_4<string>(-678431644), (object)value));
					result = false;
					num = 292611408;
					continue;
				case 5u:
				{
					int num3;
					int num4;
					if (!flag2)
					{
						num3 = -707368320;
						num4 = -707368320;
					}
					else
					{
						num3 = -1905944914;
						num4 = -1905944914;
					}
					num = num3 ^ (int)(num2 * 2106977070);
					continue;
				}
				case 4u:
					num = (int)(num2 * 533931559) ^ -746003188;
					continue;
				case 3u:
					num = (int)((num2 * 1515265170) ^ 0x3942638A);
					continue;
				case 1u:
					flag = myPlayer_ == null;
					num = ((int)num2 * -993512576) ^ -1593581945;
					continue;
				case 0u:
					result = true;
					num = 1304115992;
					continue;
				case 10u:
					break;
				default:
					{
						return result;
					}
					IL_003e:
					num = 1383681101;
					continue;
				}
				break;
			}
		}
	}

	static Type smethod_0(RuntimeTypeHandle runtimeTypeHandle_0)
	{
		return Type.GetTypeFromHandle(runtimeTypeHandle_0);
	}

	MethodInfo method_0(string string_0, BindingFlags bindingFlags_0)
	{
		return ((Type)this).GetMethod(string_0, bindingFlags_0);
	}

	static MethodRewritePattern smethod_1(PatchContext patchContext_0, MethodBase methodBase_0)
	{
		return patchContext_0.GetPattern(methodBase_0);
	}

	static MethodRewriteSet smethod_2(MethodRewritePattern methodRewritePattern_0)
	{
		return methodRewritePattern_0.Prefixes;
	}

	static bool smethod_3(MethodRewriteSet methodRewriteSet_0, MethodInfo methodInfo_0)
	{
		return methodRewriteSet_0.Add(methodInfo_0);
	}

	static MySession smethod_4()
	{
		return MySession.Static;
	}

	static bool smethod_5(MyPlayerCollection myPlayerCollection_0, ulong ulong_0, ref MyPlayer myPlayer_0)
	{
		return myPlayerCollection_0.TryGetPlayerBySteamId(ulong_0, ref myPlayer_0);
	}

	static string smethod_6(string string_0, object object_0)
	{
		return string.Format(string_0, object_0);
	}

	static void smethod_7(Logger logger_0, string string_0)
	{
		logger_0.Fatal(string_0);
	}

	static MyPromoteLevel smethod_8(MySession mySession_0, ulong ulong_0)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		return mySession_0.GetUserPromoteLevel(ulong_0);
	}

	static Logger smethod_9(string string_0)
	{
		return LogManager.GetLogger(string_0);
	}
}
