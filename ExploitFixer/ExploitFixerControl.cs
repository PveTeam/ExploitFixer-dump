using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Markup;

namespace ExploitFixer
{
    public class ExploitFixerControl : UserControl, IComponentConnector
    {
        private readonly PluginMain exploitFixerPlugin;

        internal CheckBox mainCheckBox;

        private bool isInit;

        private PluginMain PluginMain
        {
            get { return exploitFixerPlugin; }
        }

        private ExploitFixerControl()
        {
            InitializeComponent();
        }

        public ExploitFixerControl(PluginMain pluginMain)
            : this()
        {
            exploitFixerPlugin = pluginMain;
            this.DataContext = pluginMain.Config;
        }

        private void SavePlugin(object sender, RoutedEventArgs e)
        {
            PluginMain.Save();
        }

        public void InitializeComponent()
        {
            if (!isInit)
            {
                isInit = true;
                Uri componentUri = new Uri("/ExploitFixer;component/exploitfixer/htogarswigbubddnyfagmxkrpgmla.xaml", UriKind.Relative);
                Application.LoadComponent(this, componentUri);
            }
        }

        void IComponentConnector.Connect(int connectionId, object target)
        {
            switch (connectionId)
            {
                case 2:
                    ((Button)target).Click += SavePlugin;
                    break;
                case 1:
                    mainCheckBox = (CheckBox)target;
                    break;
                default:
                    isInit = true;
                    break;
            }
        }
    }
}
