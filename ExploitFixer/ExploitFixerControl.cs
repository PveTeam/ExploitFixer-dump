using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Markup;

namespace ExploitFixer
{
	public class ExploitFixerControl : UserControl, IComponentConnector
	{
		private readonly PluginMain pluginMain;
		internal CheckBox ExploitCheckBox;
		private bool isConnected;

		public ExploitFixerControl()
		{
			InitializeComponent();
		}

		public ExploitFixerControl(PluginMain pluginMainInstance)
			: this()
		{
			pluginMain = pluginMainInstance;
			this.DataContext = pluginMainInstance.Config;
		}

		private void SaveConfiguration<T0, T1>(T0 param0, T1 param1)
		{
			pluginMain.Save();
		}

		public void InitializeComponent()
		{
			if (!isConnected)
			{
				isConnected = true;
				Uri componentUri = new Uri("Your XAML URI here", UriKind.Relative);
				Application.LoadComponent(this, componentUri);
			}
		}

		void IComponentConnector.Connect(int connectionId, object target)
		{
			switch (connectionId)
			{
			case 2:
				((ButtonBase)(Button)target).Click += SaveConfiguration;
				break;
			default:
				isConnected = true;
				break;
			case 1:
				ExploitCheckBox = (CheckBox)target;
				break;
			}
		}
	}
}