using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Markup;

namespace ExploitFixer
{
	public class ExploitFixerControl : UserControl, IComponentConnector
	{
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		[CompilerGenerated]
		private readonly PluginMain pluginMain_0;

		internal CheckBox checkBox_0;

		private bool bool_0;

		private PluginMain PluginMain_0
		{
			[CompilerGenerated]
			get
			{
				return pluginMain_0;
			}
		}

		private ExploitFixerControl()
		{
			InitializeComponent();
		}

		public ExploitFixerControl(PluginMain pluginMain_1)
			: this()
		{
			pluginMain_0 = pluginMain_1;
			smethod_0((FrameworkElement)this, (object)pluginMain_1.Config);
		}

		private void method_0<T0, T1>(T0 gparam_0, T1 gparam_1)
		{
			PluginMain_0.Save();
		}

		[GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
		[DebuggerNonUserCode]
		public void InitializeComponent()
		{
			if (!bool_0)
			{
				bool_0 = true;
				Uri uri_ = smethod_1(global::_003CModule_003E.smethod_4<string>(1397835948), UriKind.Relative);
				smethod_2((object)this, uri_);
			}
		}

		[DebuggerNonUserCode]
		[EditorBrowsable(EditorBrowsableState.Never)]
		[GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
		void IComponentConnector.Connect(int connectionId, object target)
		{
			switch (connectionId)
			{
			case 2:
				smethod_3((ButtonBase)(Button)target, (RoutedEventHandler)method_0);
				break;
			default:
				bool_0 = true;
				break;
			case 1:
				checkBox_0 = (CheckBox)target;
				break;
			}
		}

		static void smethod_0(FrameworkElement frameworkElement_0, object object_0)
		{
			frameworkElement_0.DataContext = object_0;
		}

		static Uri smethod_1(string string_0, UriKind uriKind_0)
		{
			return new Uri(string_0, uriKind_0);
		}

		static void smethod_2(object object_0, Uri uri_0)
		{
			Application.LoadComponent(object_0, uri_0);
		}

		static void smethod_3(ButtonBase buttonBase_0, RoutedEventHandler routedEventHandler_0)
		{
			buttonBase_0.Click += routedEventHandler_0;
		}
	}
}
