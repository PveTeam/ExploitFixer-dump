using System;
using System.IO;
using System.Windows.Controls;
using NLog;
using Torch;
using Torch.API;
using Torch.API.Managers;
using Torch.API.Plugins;
using Torch.API.Session;
using Torch.Session;

namespace ExploitFixer;

public class PluginMain : TorchPluginBase, ITorchPlugin, IWpfPlugin, IDisposable
{
	public static readonly Logger Log = smethod_8();

	private static readonly string string_0 = global::_003CModule_003E.smethod_6<string>(-1809147942);

	private ExploitFixerControl exploitFixerControl_0;

	private Persistent<ExplotFixerConfig> persistent_0;

	public ExplotFixerConfig Config => persistent_0?.Data;

	public UserControl GetControl()
	{
		return exploitFixerControl_0 ?? (exploitFixerControl_0 = new ExploitFixerControl(this));
	}

	public override void Init(ITorchBase torch)
	{
		//IL_009f: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a9: Expected O, but got Unknown
		method_2(torch);
		bool flag = default(bool);
		TorchSessionManager manager = default(TorchSessionManager);
		while (true)
		{
			int num = 884290817;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)num ^ 0x6D7D24E1u) % 11)
				{
				case 10u:
					num = (int)((num2 * 1482827180) ^ 0x32498A96);
					continue;
				case 9u:
				{
					int num3;
					int num4;
					if (flag)
					{
						num3 = 716424991;
						num4 = 716424991;
					}
					else
					{
						num3 = 67727945;
						num4 = 67727945;
					}
					num = num3 ^ ((int)num2 * -1555401605);
					continue;
				}
				case 8u:
					num = (int)(num2 * 1856692192) ^ -1231682491;
					continue;
				case 5u:
					manager = DependencyProviderExtensions.GetManager<TorchSessionManager>((IDependencyProvider)(object)smethod_1(smethod_0((TorchPluginBase)(object)this)));
					flag = manager != null;
					num = ((int)num2 * -612276667) ^ -476774333;
					continue;
				case 4u:
					smethod_3(Log, global::_003CModule_003E.smethod_2<string>(1838471273));
					num = 907195208;
					continue;
				case 3u:
					smethod_2(manager, new TorchSessionStateChangedDel(method_0<TorchSessionState, ITorchSession>));
					num = (int)((num2 * 1212883880) ^ 0x6B50B4D8);
					continue;
				case 2u:
					num = (int)((num2 * 1751947548) ^ 0x5C1AA179);
					continue;
				case 1u:
					method_1<string, Exception, bool>();
					num = (int)((num2 * 1246643850) ^ 0x3C5C8624);
					continue;
				case 0u:
					Save();
					num = 915579292;
					continue;
				default:
					return;
				case 7u:
					break;
				case 6u:
					return;
				}
				break;
			}
		}
	}

	private void method_0<T0, T1>(T1 gparam_0, T0 gparam_1)
	{
		T0 val2 = default(T0);
		T0 val = default(T0);
		while (true)
		{
			int num = -769143264;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)num ^ 0xBA5CE23Du) % 13)
				{
				case 12u:
					smethod_4(Log, global::_003CModule_003E.smethod_3<string>(411515802));
					num = -1409567240;
					continue;
				case 11u:
					num = (int)((num2 * 214012715) ^ 0x6AA8FDD7);
					continue;
				case 10u:
					smethod_4(Log, global::_003CModule_003E.smethod_3<string>(435977463));
					num = -758905589;
					continue;
				case 9u:
				{
					int num4;
					int num5;
					if ((nint)val2 != 1)
					{
						num4 = 1149702434;
						num5 = 1149702434;
					}
					else
					{
						num4 = 977588377;
						num5 = 977588377;
					}
					num = num4 ^ ((int)num2 * -1626733047);
					continue;
				}
				case 8u:
				{
					int num3;
					if ((nint)val2 == 2)
					{
						num = -686253163;
						num3 = -686253163;
					}
					else
					{
						num = -1506221515;
						num3 = -1506221515;
					}
					continue;
				}
				case 6u:
					num = (int)(num2 * 1760497361) ^ -789812772;
					continue;
				case 5u:
					val2 = val;
					num = ((int)num2 * -1225410007) ^ -1967463547;
					continue;
				case 4u:
					num = (int)(num2 * 1565714871) ^ -1165776295;
					continue;
				case 3u:
					num = ((int)num2 * -1576768181) ^ -571209136;
					continue;
				case 2u:
					num = ((int)num2 * -780973449) ^ 0x395B7295;
					continue;
				case 1u:
					val = gparam_1;
					num = ((int)num2 * -1843412923) ^ -47582723;
					continue;
				default:
					return;
				case 7u:
					break;
				case 0u:
					return;
				}
				break;
			}
		}
	}

	private void method_1<T0, T1, T2>()
	{
		//IL_00f7: Expected O, but got I4
		T0 val = (T0)smethod_6(smethod_5((TorchPluginBase)(object)this), string_0);
		try
		{
			while (true)
			{
				IL_005e:
				int num = 1751462755;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)num ^ 0x4D113325u) % 4)
					{
					case 3u:
						num = (int)((num2 * 1438854678) ^ 0x7745A062);
						continue;
					case 2u:
						persistent_0 = Persistent<ExplotFixerConfig>.Load((string)val, true);
						num = ((int)num2 * -1196906879) ^ -1198015208;
						continue;
					default:
						goto end_IL_003d;
					case 0u:
						break;
					case 1u:
						goto end_IL_003d;
					}
					goto IL_005e;
					continue;
					end_IL_003d:
					break;
				}
				break;
			}
		}
		catch (Exception ex)
		{
			while (true)
			{
				IL_00d8:
				int num3 = 466048377;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)num3 ^ 0x4D113325u) % 6)
					{
					case 4u:
						num3 = (int)(num2 * 1404950092) ^ -126039034;
						continue;
					case 2u:
						num3 = ((int)num2 * -698948497) ^ -2066649854;
						continue;
					case 1u:
						Log.Warn<T1>((T1)ex);
						num3 = (int)(num2 * 262572379) ^ -1151951406;
						continue;
					case 0u:
						num3 = ((int)num2 * -231981126) ^ 0x739DCD4F;
						continue;
					default:
						goto end_IL_00af;
					case 3u:
						break;
					case 5u:
						goto end_IL_00af;
					}
					goto IL_00d8;
					continue;
					end_IL_00af:
					break;
				}
				break;
			}
		}
		T2 val2 = (T2)(persistent_0?.Data == null);
		if (val2 == null)
		{
			return;
		}
		while (true)
		{
			int num4 = 110246052;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)num4 ^ 0x4D113325u) % 8)
				{
				case 7u:
					smethod_4(Log, global::_003CModule_003E.smethod_2<string>(428012214));
					num4 = 739132411;
					continue;
				case 6u:
					num4 = (int)((num2 * 515067697) ^ 0x2881065F);
					continue;
				case 4u:
					persistent_0 = new Persistent<ExplotFixerConfig>((string)val, new ExplotFixerConfig());
					num4 = (int)((num2 * 271088873) ^ 0x6453C0E3);
					continue;
				case 2u:
					persistent_0.Save((string)null);
					num4 = ((int)num2 * -918501029) ^ -345423813;
					continue;
				case 1u:
					num4 = ((int)num2 * -685542539) ^ 0x22B558FF;
					continue;
				case 0u:
					num4 = ((int)num2 * -1775711712) ^ -1102199256;
					continue;
				default:
					return;
				case 3u:
					break;
				case 5u:
					return;
				}
				break;
			}
		}
	}

	public void Save()
	{
		try
		{
			while (true)
			{
				int num = 1023630784;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)num ^ 0x54E340A6u) % 4)
					{
					case 3u:
						smethod_4(Log, global::_003CModule_003E.smethod_2<string>(489178441));
						num = 850373231;
						continue;
					case 2u:
						persistent_0.Save((string)null);
						num = (int)((num2 * 1569135430) ^ 0x4C1CC8B5);
						continue;
					default:
						return;
					case 0u:
						break;
					case 1u:
						return;
					}
					break;
				}
			}
		}
		catch (IOException exception_)
		{
			while (true)
			{
				int num3 = 776905129;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)num3 ^ 0x54E340A6u) % 6)
					{
					case 3u:
						smethod_7(Log, (Exception)exception_, global::_003CModule_003E.smethod_4<string>(-732126691));
						num3 = 42389168;
						continue;
					case 2u:
						num3 = (int)(num2 * 549819893) ^ -1033620256;
						continue;
					case 1u:
						num3 = ((int)num2 * -1571271022) ^ -531644197;
						continue;
					case 0u:
						num3 = (int)(num2 * 100304270) ^ -714631808;
						continue;
					default:
						return;
					case 5u:
						break;
					case 4u:
						return;
					}
					break;
				}
			}
		}
	}

	void method_2(ITorchBase itorchBase_0)
	{
		((TorchPluginBase)this).Init(itorchBase_0);
	}

	static ITorchBase smethod_0(TorchPluginBase torchPluginBase_0)
	{
		return torchPluginBase_0.Torch;
	}

	static IDependencyManager smethod_1(ITorchBase itorchBase_0)
	{
		return itorchBase_0.Managers;
	}

	static void smethod_2(TorchSessionManager torchSessionManager_0, TorchSessionStateChangedDel torchSessionStateChangedDel_0)
	{
		torchSessionManager_0.SessionStateChanged += torchSessionStateChangedDel_0;
	}

	static void smethod_3(Logger logger_0, string string_1)
	{
		logger_0.Warn(string_1);
	}

	static void smethod_4(Logger logger_0, string string_1)
	{
		logger_0.Info(string_1);
	}

	static string smethod_5(TorchPluginBase torchPluginBase_0)
	{
		return torchPluginBase_0.StoragePath;
	}

	static string smethod_6(string string_1, string string_2)
	{
		return Path.Combine(string_1, string_2);
	}

	static void smethod_7(Logger logger_0, Exception exception_0, string string_1)
	{
		logger_0.Warn(exception_0, string_1);
	}

	static Logger smethod_8()
	{
		return LogManager.GetCurrentClassLogger();
	}
}
