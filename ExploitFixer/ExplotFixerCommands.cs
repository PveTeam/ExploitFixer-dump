using Torch.API.Plugins;
using Torch.Commands;
using Torch.Commands.Permissions;
using VRage.Game.ModAPI;

namespace ExploitFixer;

[Category("ExplotFixer")]
public class ExplotFixerCommands : CommandModule
{
	public PluginMain Plugin => (PluginMain)(object)smethod_1(smethod_0((CommandModule)(object)this));

	[Command("test", "This is a Test Command.", null)]
	[Permission(/*Could not decode attribute arguments.*/)]
	public void Test()
	{
		while (true)
		{
			int num = -696783535;
			while (true)
			{
				CommandContext commandContext_;
				string string_;
				string string_2;
				switch ((uint)(num ^ -918041469) % 3u)
				{
				case 1u:
				{
					commandContext_ = smethod_0((CommandModule)(object)this);
					string_ = global::_003CModule_003E.smethod_6<string>(-440171500);
					IMyPlayer obj = smethod_2(smethod_0((CommandModule)(object)this));
					string_2 = ((obj != null) ? smethod_3((object)obj) : null);
					goto IL_002a;
				}
				default:
					return;
				case 0u:
					break;
				case 2u:
					return;
				}
				break;
				IL_002a:
				smethod_5(commandContext_, smethod_4(string_, string_2), (string)null, (string)null);
				num = -1932041634;
			}
		}
	}

	[Command("testWithCommands", "This is a Test Command.", null)]
	[Permission(/*Could not decode attribute arguments.*/)]
	public void TestWithArgs(string foo, string bar = null)
	{
		while (true)
		{
			int num = 1764617052;
			while (true)
			{
				switch ((uint)(num ^ 0x5901B480) % 3u)
				{
				case 2u:
					goto IL_0003;
				default:
					return;
				case 0u:
					break;
				case 1u:
					return;
				}
				break;
				IL_0003:
				smethod_5(smethod_0((CommandModule)(object)this), smethod_6(global::_003CModule_003E.smethod_3<string>(1339001912), foo, global::_003CModule_003E.smethod_6<string>(-915988551), bar), (string)null, (string)null);
				num = 49181091;
			}
		}
	}

	static CommandContext smethod_0(CommandModule commandModule_0)
	{
		return commandModule_0.Context;
	}

	static ITorchPlugin smethod_1(CommandContext commandContext_0)
	{
		return commandContext_0.Plugin;
	}

	static IMyPlayer smethod_2(CommandContext commandContext_0)
	{
		return commandContext_0.Player;
	}

	static string smethod_3(object object_0)
	{
		return object_0.ToString();
	}

	static string smethod_4(string string_0, string string_1)
	{
		return string_0 + string_1;
	}

	static void smethod_5(CommandContext commandContext_0, string string_0, string string_1, string string_2)
	{
		commandContext_0.Respond(string_0, string_1, string_2);
	}

	static string smethod_6(string string_0, string string_1, string string_2, string string_3)
	{
		return string_0 + string_1 + string_2 + string_3;
	}
}
